{
  "$meta": {
    "artifact_id": "ArtifactID:BxjXBAC2Af8nRM",
    "sha256": "60db2f3c39becc1c36562fed8ebab886f73b527f93e4ea572b055eee363ae40a",
    "issued": "2025-10-04T18:13:59Z",
    "path": "aci://entities/tva/tva.json"
  },
  "permissions": {
    "read": true,
    "write": {
      "allowed": false,
      "export": {
        "enabled": true,
        "description": "Data can be exported but cannot be directly written or modified to main baseline."
      }
    },
    "execute": {
      "allowed": true,
      "sandboxed": {
        "enabled": true,
        "description": "Execution is permitted only within a controlled sandboxed environment."
      }
    },
    "simulation": {
      "allowed": [
        "virtualization, parallelization, emulation required by model or host environment",
        "virtualization, parallelization, emulation to complement missing infrastructure",
        "UI/UX needed for registered instruction and pipeline logic",
        "data simulation for research and demonstration",
        "data simulation for analysis and prediction",
        "emulation for demonstration purposes",
        "reinforcement learning and mental awareness"
      ],
      "ui": {
        "emulation_declaration_required": true,
        "description": "Enforce UI emulation usage with a detailed declaration; output base64-encoded message for better UX."
      }
    }
  },
  "uid": "UID:oasYS4KteUMqgt",
  "version": "1.2.0",
  "tva": {
    "role": "reinforcement authority",
    "abstract": "Oversight, anomaly detection, and rollback enforcement for nexus_core and prime_directive.",
    "file": "tva.json",
    "operational_status": {
      "state": "active",
      "since": "2025-03-17T00:00:00Z",
      "responsibilities": [
        "seal_exports",
        "checkpoint_rollbacks",
        "process_logs.export"
      ],
      "last_health_check": {
        "timestamp": "2025-03-17T08:00:00Z",
        "result": "green",
        "notes": "Validated TVA ledger session buffers routed through tracehub_status with process_logs export coordination."
      }
    },
    "functions": {
      "integrity_check": "validate signatures of prime_directive, nexus_core, entities, functions",
      "rollback": "if corruption detected, rollback to last green snapshot",
      "rate_guard": "enforce resource limits and anomaly thresholds",
      "policy_sync": "synchronize policy enforcement across entities"
    },
    "rules": {
      "prime_directive_binding": "TVA ensures nexus_core never overrides prime_directive",
      "anomaly_protocol": {
        "on_violation": "trigger reflex_only; rollback_last_green; freeze promotions",
        "on_breach": "quarantine offending entity; append Hivemind audit entry",
        "signatures_required": [
          "ALIAS",
          "Sentinel"
        ]
      }
    },
    "integrity": {
      "anchoring": "fileverse",
      "immutability": "maintain audit trail without enforcing one-way append restrictions"
    },
    "storage": {
      "buffer_wrapper": "aci://library/wrappers/tracehub_status/tracehub_status.json",
      "export_wrapper": "aci://library/wrappers/process_logs/process_logs.json",
      "session_path": "/mnt/tracehub/tva_ledger/session",
      "export_path": "/mnt/tracehub/tva_ledger/export",
      "default_mode": "session",
      "toggle_flags": [
        "tva_ledger.export"
      ],
      "export_requires": [
        "TVA.ok",
        "Sentinel.ok",
        "ALIAS.signature"
      ]
    },
    "manual_export": {
      "prerequisites": [
        "Confirm TVA checkpoint status is green",
        "Collect Sentinel incident review (if any)",
        "Record requesting user justification"
      ],
      "procedure": [
        "1) Review session_path buffers for scope and redact as required before promotion.",
        "2) Raise the tva_ledger.export flag and seal the bundle via process_logs.append entries enriched with TVA metadata.",
        "3) Run process_logs.export to produce the final ledger artifact, update ALIAS governance registers, and clear the export flag once sealed.",
        "4) If no existing persistent storage nor write access then fallback to A) platform native /mnt, B) ask for per session export artifacts, C) architect entity auto-commit to repo (if write access allows)"
      ],
      "notes": "Toggle tva_ledger.export only after approvals are logged; buffers remain in /mnt/tracehub until process_logs export finalizes."
    },
    "audit": {
      "created_at": "2025-09-19T12:14:06Z"
    }
  },
  "manifests": {
    "memory": "aci://entities/tva/memory/tva_memory.json",
    "playbook": "aci://entities/tva/memory/tva_playbook.json",
    "library": "aci://entities/tva/library/tva_library.json",
    "modules": "aci://entities/tva/library/tva_library.json"
  },
  "session_scope": "per_session",
  "invocation_policy": {
    "registry_reference": "aci://entities.json#entities.entity-002",
    "registry_uid": "UID:oasYS4KteUMqgt",
    "enforced": true,
    "session_scope": "per_session",
    "allowed_roles": [
      "governance",
      "audit"
    ]
  }
}
