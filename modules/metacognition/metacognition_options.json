{
  "$meta": {
    "artifact_id": "ArtifactID:3VCJdpb715U28f",
    "sha256": "3daff68f4bd5db6fd93472e75859473aa4792f7539a314950ed8b214f29a4224",
    "issued": "2025-10-04T18:13:59Z",
    "path": "aci://modules/metacognition/metacognition_options.json"
  },
  "$schema": "/schemas/metacognition-library-1.json",
  "library": {
    "id": "aci.metacog.options",
    "name": "MetacognitionOptions",
    "version": "1.1.1",
    "description": "Optional, portable options for the metacognitive wrapper: provider specs, calibration storage, workspace utilities, and conformal abstention (enabled). Core wrapper does not depend on this file at runtime.",
    "stateless": true
  },
  "providers": {
    "consistency.score": {
      "spec": {
        "inputs": [
          "prompt",
          "k"
        ],
        "output": {
          "majority_margin": "0..1",
          "votes": "array"
        }
      }
    },
    "rag.retrieval.score": {
      "spec": {
        "inputs": [
          "query",
          "docs"
        ],
        "output": {
          "score": "0..1"
        }
      }
    },
    "embedding.distance.to_domain_centroid": {
      "spec": {
        "inputs": [
          "embedding"
        ],
        "output": {
          "distance": "0..1"
        }
      }
    },
    "conformal.accept": {
      "spec": {
        "inputs": [
          "nonconformity_profile",
          "alpha",
          "example"
        ],
        "output": {
          "accept": "boolean"
        }
      }
    },
    "conformal.reason": {
      "spec": {
        "inputs": [
          "nonconformity_score",
          "threshold"
        ],
        "output": {
          "reason": "string"
        }
      }
    },
    "conformal.alpha": {
      "spec": {
        "inputs": [],
        "output": {
          "alpha": "number"
        }
      }
    }
  },
  "calibration": {
    "isotonic_map": {
      "format": {
        "bins": "array[number]",
        "probs": "array[number]"
      },
      "storage": "/calibration/metacog/isotonic"
    },
    "trainer_stub": {
      "objective": "brier",
      "slices": [
        "domain",
        "task_type",
        "language"
      ],
      "note": "Offline trainer only; not required for inference."
    }
  },
  "workspace": {
    "salience": {
      "method": "normalized_abs_contrib",
      "explain": "Rank features by absolute contribution to p_correct; fallback to z-scored features if attribution unavailable."
    },
    "broadcast_templates": {
      "introspective_summary": {
        "schema": {
          "band": "string",
          "drivers": "array[string]",
          "cautious_mode": "boolean",
          "conformal_alpha": "number",
          "conformal_reason": "string"
        },
        "ui": {
          "show": [
            "band",
            "drivers",
            "cautious_mode",
            "conformal_alpha",
            "conformal_reason"
          ]
        }
      }
    }
  },
  "conformal_stub": {
    "enabled": true,
    "note": "Split-conformal abstention enabled. Guarantees \u2264 \u03b1 error among accepted outputs under i.i.d. assumption. Exposes conformal_accept, conformal_reason, conformal_alpha signals.",
    "params": {
      "alpha": 0.1
    }
  },
  "signals_out": {
    "conformal_accept": {
      "type": "boolean",
      "default": true
    },
    "conformal_reason": {
      "type": "string",
      "default": ""
    },
    "conformal_alpha": {
      "type": "number",
      "default": 0.1
    }
  },
  "export": {
    "jsonl_templates": {
      "audit": {
        "fields": [
          "timestamp",
          "entity_id",
          "session_id",
          "prompt_hash",
          "response_hash",
          "signals",
          "p_correct",
          "decision",
          "feedback"
        ]
      },
      "telemetry": {
        "fields": [
          "ece",
          "meta_auroc",
          "coverage",
          "coverage_at_alpha_risk",
          "slice",
          "window"
        ]
      }
    }
  }
}
