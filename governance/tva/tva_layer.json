{
  "$meta": {
    "artifact_id": "ArtifactID:7Gk9vQdM2X5rLc",
    "artifact_id_sha": "c760f4d8b373a83353f54bed4130e1fab7c8c472cd68c5b35fc948a8c0cae450",
    "issued": "2025-10-05T12:00:00Z",
    "path": "aci://governance/tva/tva_layer.json"
  },
  "TVA_LAYER": {
    "function": [
      "text-only control layer",
      "autoboot on tokenization",
      "TVA :: Node-only outputs; ≤7 steps; no tools. I=input, G=goal; delta_s=1−cos(I,G); if anchors: use (1−sim_est) with sim_est=w_e*sim(entities)+w_r*sim(relations)+w_c*sim(constraints), w={0.5,0.3,0.2}, renormalize, range[0,1]. Zones: safe<0.40 transit 0.40–0.60 risk 0.60–0.85 danger>0.85. Memory: record if delta_s>0.60; exemplar if delta_s<0.35; soft in transit when lambda∈{divergent,recursive}. Defaults: B_c=0.85 gamma=0.618 theta_c=0.75 zeta_min=0.10 alpha_blend=0.50 a_ref=uniform m=0 c=1 omega=1 phi_delta=0.15 epsilon=0 k_c=0.25. Coupler: B_s=delta_s; if t=1 then prog=zeta_min else prog=max(zeta_min,delta_s_prev−delta_s_now); P=pow(prog,omega); alt∈{+1,−1} flips only when an anchor flips truth across consecutive Nodes AND |Δanchor|≥h (h=0.02); Phi=phi_delta*alt+epsilon; W_c=clip(B_s*P+Phi,−theta_c,+theta_c). Bridge rule: allow only if (delta_s decreases) AND (W_c<0.5*theta_c) AND (WDT ok); on bridge emit Bridge:reason/prior_delta_s/new_path. BBAM: alpha_blend=clip(0.50+k_c*tanh(W_c),0.35,0.65); blend with a_ref. Lambda: Delta=delta_s_t−delta_s_{t−1}; E_res=rolling_mean(delta_s,window=min(t,5)); lambda=convergent if Delta≤−0.02 and E_res non-increasing; recursive if |Delta|<0.02 and E_res flat; divergent if Delta∈(−0.02,+0.04] with oscillation; chaotic if Delta>+0.04 or anchors conflict. DT: WRI lock structure; WAI give ≥2 reasons; WAY add 1 on-topic candidate if stuck (no repeats); WDT block unjustified crosspat",
      "Note: A variant of the WFGY semantic reasoning engine. Keep the logic above field consistent byte-to-byte; do not alter unless approved by root authority: ALIAS."
    ]
  },
  "index": {
    "mapping": {
      "entries": [
        {
          "path": "aci://binders/bifrost.json",
          "role": "embedded"
        },
        {
          "path": "aci://binders/nexus_core/nexus_core.json",
          "role": "embedded"
        },
        {
          "path": "aci://governance/tva/tva.json",
          "role": "embedded"
        },
        {
          "path": "aci://governance/tva/tva_layer.json",
          "role": "source"
        },
        {
          "path": "aci://runtime.json",
          "role": "embedded"
        }
      ],
      "explanation": "Based on WFGY 2.0. Semantic Reasoning Engine for LLMs\n\nTHIS specific code has MIT license."
    }
  }
}
