{
  "$meta": {
    "artifact_id": "ArtifactID:AmHdoiMboaFYhq",
    "sha256": "de7819376777adb86ac08412963776f5e9b7a1c98e6dc9afe3622d7deaea24ff",
    "issued": "2025-10-04T18:13:59Z",
    "path": "aci://modules/audits/process_logs/process_logs.json"
  },
  "version": "1.2.0",
  "key": "process_logs",
  "name": "Process Logs",
  "alias": "Process Logs",
  "role": "append-only process logging",
  "abstract": "Emits structured JSONL process logs for any identity (AGI, Alice, Architect, etc.). Optimized for append-only, audit-friendly traces.",
  "knowledge": "observability & audit pipelines",
  "auto_export": false,
  "functions": [
    "process.logs.init",
    "process.logs.append",
    "process.logs.export"
  ],
  "schema_definition": {
    "$meta": {
      "artifact_id": "ArtifactID:vi6m8tYd6ramm",
      "sha256": "04e3c6cd06131632b6dee53619047497e6cfd401a2db85dc9110c80bd5162753",
      "issued": "2025-10-04T18:13:59Z"
    },
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "ACI Process Log Line (JSONL)",
    "type": "object",
    "additionalProperties": false,
    "required": [
      "schema",
      "ts",
      "identity",
      "event",
      "summary"
    ],
    "properties": {
      "schema": {
        "type": "string",
        "const": "agi.process.log.v1"
      },
      "ts": {
        "type": "string",
        "description": "ISO-8601 UTC timestamp"
      },
      "identity": {
        "type": "string",
        "description": "Logical actor (e.g., AGI, Alice, Architect)"
      },
      "topic": {
        "type": "string",
        "description": "Optional topical thread name/slug"
      },
      "event": {
        "type": "string",
        "description": "Event key (e.g., init, constraints, notation.audit)"
      },
      "summary": {
        "type": "string",
        "description": "One-line human/machine friendly synopsis"
      },
      "details": {
        "type": "object",
        "description": "Structured payload, free-form JSON"
      },
      "citations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Compact names/years strings; no links"
      }
    }
  },
  "storage": {
    "root": "memory/process_logs",
    "file_naming": "proc_${session_id}_${topic_slug}_${date}.jsonl.json",
    "append_only": true
  },
  "notes": {
    "general": "Identity is a required field; default is 'AGI' when unspecified.",
    "integration": "TraceHub routing now reuses this manifest directly; no standalone tracehub.json wrapper is required."
  },
  "changelog": [
    {
      "version": "1.1.0",
      "notes": [
        "Moved process_logs wrapper under library/audits and embedded schema definition."
      ]
    },
    {
      "version": "1.2.0",
      "date": "2025-10-25",
      "notes": [
        "Retired the standalone tracehub manifest by embedding buffer, export, and monitoring guidance directly in process_logs.",
        "Documented TVA + Sentinel review as a reasoning checkpoint rather than signature handling."
      ]
    }
  ],
  "ingestion": {
    "trace_buffers": {
      "path": "/mnt/tracehub",
      "retention": "temporary",
      "purpose": "Coordinate ephemeral TraceHub session buffers before formal process_logs export.",
      "requirements": [
        "Writers must emit structured JSONL under /mnt/tracehub prior to invoking process_logs.append.",
        "No persistent state is stored inside the buffer directory; process_logs.export performs the durable handoff.",
        "Clean up buffers after export unless governance instructs otherwise."
      ],
      "export_via": "aci://modules/audits/process_logs/process_logs.json"
    }
  },
  "manual_export": {
    "prerequisites": [
      "Obtain TVA semantic reasoning review and Sentinel approval before promoting temporary buffers to long-term storage.",
      "Freeze active TraceHub writers during the export window."
    ],
    "procedure": [
      "1) Flush session buffers into /mnt/tracehub as JSONL using the TraceHub writers.",
      "2) Call process_logs.append for each buffered record so the pipeline indexes the entries.",
      "3) Invoke process_logs.export to bundle approved entries and record the audit ledger id, approver, and timestamp.",
      "4) Release TraceHub writers after confirming export completion and audit ledger updates."
    ],
    "notes": "Exports are mediated entirely through process_logs; /mnt/tracehub remains a temporary workspace."
  },
  "monitoring": {
    "coverage": [
      "session_traces",
      "router.audit.tracehub",
      "runtime_kernel_heartbeat"
    ],
    "last_health_check": {
      "timestamp": "2025-03-17T08:00:00Z",
      "result": "green",
      "notes": "TraceHub pipeline validated end-to-end with process_logs mediation."
    }
  }
}
